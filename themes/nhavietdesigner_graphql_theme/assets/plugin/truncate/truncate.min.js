(function(a, b) {
    'function' == typeof define && define.amd ? define(['jQuery'], b) : 'object' == typeof module && module.exports ? module.exports = b(require('jQuery')) : a.Truncate = b(a.jQuery)
})(this, function(a) {
    function b(n) {
        return n.replace(/\s*$/, '')
    }

    function c(n, o) {
        if (n.innerText) n.innerText = o;
        else if (n.nodeValue) n.nodeValue = o;
        else if (n.textContent) n.textContent = o;
        else return !1
    }

    function d(n, o, p, q) {
        var s, r = n.parent();
        n.remove();
        var t = p ? p.length : 0;
        if (r.contents().length > t) return s = r.contents().eq(-1 - t), h(s, o, p, q);
        var u = r.prev();
        return (s = u.contents().eq(-1), !!s.length) && (c(s[0], s.text() + q.ellipsis), r.remove(), p.length && u.append(p), !0)
    }

    function e(n, o, p, q) {
        for (var u, v, r = n[0], s = n.text(), t = '', w = 0, x = s.length; w <= x;) u = w + (x - w >> 1), v = q.ellipsis + b(s.substr(u - 1, s.length)), c(r, v), o.height() > q.maxHeight ? w = u + 1 : (x = u - 1, t = t.length > v.length ? t : v);
        return 0 < t.length ? (c(r, t), !0) : d(n, o, p, q)
    }

    function f(n, o, p, q) {
        for (var u, v, r = n[0], s = n.text(), t = '', w = 0, x = s.length; w <= x;) u = w + (x - w >> 1), v = b(s.substr(0, u + 1)) + q.ellipsis, c(r, v), o.height() > q.maxHeight ? x = u - 1 : (w = u + 1, t = t.length > v.length ? t : v);
        return 0 < t.length ? (c(r, t), !0) : d(n, o, p, q)
    }

    function g(n, o, p, q) {
        for (var x, y, r = n[0], s = n.text(), t = '', u = 0, v = s.length, w = v >> 1; u <= w;) x = u + (w - u >> 1), y = b(s.substr(0, x)) + q.ellipsis + s.substr(v - x, v - x), c(r, y), o.height() > q.maxHeight ? w = x - 1 : (u = x + 1, t = t.length > y.length ? t : y);
        return 0 < t.length ? (c(r, t), !0) : d(n, o, p, q)
    }

    function h(n, o, p, q) {
        return 'end' === q.position ? f(n, o, p, q) : 'start' === q.position ? e(n, o, p, q) : g(n, o, p, q)
    }

    function i(n, o, p, q) {
        var t, u, r = n[0],
            s = n.contents(),
            v = s.length,
            w = v - 1,
            x = !1;
        for (n.empty(); 0 <= w && !x; w--)(t = s.eq(w), u = t[0], 8 !== u.nodeType) && (r.insertBefore(u, r.firstChild), p.length && (0 <= a.inArray(r.tagName.toLowerCase(), m) ? n.after(p) : n.append(p)), o.height() > q.maxHeight && (3 === u.nodeType ? x = h(t, o, p, q) : x = k(t, o, p, q)), !x && p.length && p.remove());
        return x
    }

    function j(n, o, p, q) {
        var t, u, r = n[0],
            s = n.contents(),
            v = 0,
            w = s.length,
            x = !1;
        for (n.empty(); v < w && !x; v++)(t = s.eq(v), u = t[0], 8 !== u.nodeType) && (r.appendChild(u), p.length && (0 <= a.inArray(r.tagName.toLowerCase(), m) ? n.after(p) : n.append(p)), o.height() > q.maxHeight && (3 === u.nodeType ? x = h(t, o, p, q) : x = k(t, o, p, q)), !x && p.length && p.remove());
        return x
    }

    function k(n, o, p, q) {
        return 'end' === q.position ? j(n, o, p, q) : 'start' === q.position ? i(n, o, p, q) : j(n, o, p, q)
    }

    function l(n, o) {
        this.element = n, this.$element = a(n), this._name = 'truncate', this._defaults = {
            lines: 1,
            ellipsis: '\u2026',
            showMore: '',
            showLess: '',
            position: 'end',
            lineHeight: 'auto'
        }, this.config(o), this.original = this.cached = n.innerHTML, this.isTruncated = !1, this.isCollapsed = !0, this.update()
    }
    var m = ['table', 'thead', 'tbody', 'tfoot', 'tr', 'col', 'colgroup', 'object', 'embed', 'param', 'ol', 'ul', 'dl', 'blockquote', 'select', 'optgroup', 'option', 'textarea', 'script', 'style'];
    return l.prototype = {
        config: function(n) {
            if (this.options = a.extend({}, this._defaults, n), 'auto' === this.options.lineHeight) {
                var o = this.$element.css('line-height'),
                    p = 18;
                'normal' !== o && (p = parseInt(o, 10)), this.options.lineHeight = p
            }
            void 0 === this.options.maxHeight && (this.options.maxHeight = parseInt(this.options.lines, 10) * parseInt(this.options.lineHeight, 10)), 'start' !== this.options.position && 'middle' !== this.options.position && 'end' !== this.options.position && (this.options.position = 'end'), this.$clipNode = a(a.parseHTML(this.options.showMore), this.$element), this.original && this.update()
        },
        update: function(n) {
            var o = !this.isCollapsed;
            'undefined' == typeof n ? this.isCollapsed && this.element.innerHTML === this.cached && (this.element.innerHTML = this.original) : this.original = this.element.innerHTML = n;
            var p = this.$element.wrapInner('<div/>').children();
            p.css({
                border: 'none',
                margin: 0,
                padding: 0,
                width: 'auto',
                height: 'auto',
                'word-wrap': 'break-word'
            }), this.isTruncated = !1, p.height() > this.options.maxHeight ? (this.isTruncated = k(p, p, this.$clipNode, this.options), this.isExplicitlyCollapsed && (this.isCollapsed = !0, o = !1)) : this.isCollapsed = !1, p.replaceWith(p.contents()), this.cached = this.element.innerHTML, o && (this.element.innerHTML = this.original)
        },
        expand: function() {
            var n = !0;
            this.isExplicitlyCollapsed && (this.isExplicitlyCollapsed = !1, n = !1), this.isCollapsed && (this.isCollapsed = !1, this.element.innerHTML = this.isTruncated ? this.original + (n ? this.options.showLess : '') : this.original)
        },
        collapse: function(n) {
            this.isExplicitlyCollapsed = !0, this.isCollapsed || (this.isCollapsed = !0, n = n || !1, n ? this.update() : this.element.innerHTML = this.cached)
        }
    }, a.fn.truncate = function(n) {
        var o = a.makeArray(arguments).slice(1);
        return this.each(function() {
            var p = a.data(this, 'jquery-truncate');
            p ? 'function' == typeof p[n] && p[n].apply(p, o) : a.data(this, 'jquery-truncate', new l(this, n))
        })
    }, l
});